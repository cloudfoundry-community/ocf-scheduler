#!/usr/bin/env perl

use Term::ANSIColor q/colorstrip/;

my (%items,$status);
my $tests = 0;
my $failures = 0;

my $expected=qr#\s*
  COMMON NAME \|     EXPIRY      \| *PATH\s*
--------------\+-----------------\+-*
  127.0.0.1   \| EXPIRED         \| [a-z-]+->secret/test/expired:certificate\s*
              \|                 \| *        secret/test/expired:combined\s*
--------------\+-----------------\+-*
  127.0.0.1   \| 3h \d+m          \| [a-z-]+->secret/test/soon:certificate\s*
              \|                 \|  *        secret/test/soon:combined\s*
--------------\+-----------------\+-*
  127.0.0.1   \| 1d 23h \d+m      \| [a-z-]+->secret/test/next:certificate\s*
              \|                 \|  *        secret/test/next:combined\s*
--------------\+-----------------\+-*
  127.0.0.1   \| 13d 23h \d+m     \| [a-z-]+->secret/test/fortnight:certificate\s*
              \|                 \|  *        secret/test/fortnight:combined\s*
--------------\+-----------------\+-*
  127.0.0.1   \| 1y 36[45]d 23h \d+m \| [a-z-]+->secret/dd/ssl:certificate\s*
              \|                 \|   *       secret/dd/ssl:combined\s*
--------------\+-----------------\+-*
#sum;

sub title {
	my ($header) = @_;
	printf "\n%s\n%s\n\n", $header, '=' x length($header);
}

sub summary {
	printf "\nTests/Failures: %d/%d\n\n", $tests, $failures;
}

my $in = '';
while (<STDIN>) {
	print;
	chomp;
	$in .= colorstrip($_)."\n";
}

title "Testing doomsday list";

$tests+=1;
my $pass =$in =~ m/$expected/ms;
printf("[Assert] Output matches expected values: %s", $pass ? 'passed' : "failed - Actual:\n$in\n");
$failures +=1 unless $pass;
summary;
exit $failures > 0 ? 1 : 0;
