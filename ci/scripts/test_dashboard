#!/usr/bin/env perl

use Term::ANSIColor q/colorstrip/;

my (%items,$status);
my $tests = 0;
my $failures = 0;

sub test_that {
	$tests+=1;
	my ($subject, $test, $value, $subject_descriptor) = @_;

	if ($test eq "is") {
		# Test key value
		my $actual = $items{$subject}[0];
		my $pass =  $actual eq $value;
		printf("[Assert] certificate %s status is '%s': %s\n", $subject, $value, $pass ? 'passed' : "failed ($actual)");
		$failures+=1 unless $pass;
	} elsif ($test eq has_key_count_of) {
		use Data::Dumper;
		my $out = Dumper($subject);
		my $actual = scalar(keys %{$subject});
		my $pass =  $actual == $value;
		printf("[Assert] %s is %d: %s\n", $subject_descriptor, $value, $pass ? 'passed' : "failed ($out)");
		$failures+=1 unless $pass;
	}
}

sub title {
	my ($header) = @_;
	printf "\n%s\n%s\n\n", $header, '=' x length($header);
}

sub summary {
	printf "\nTests/Failures: %d/%d\n\n", $tests, $failures;
}

while (<STDIN>) {
	print;
	chomp;
	$_ = colorstrip($_);
	next if /^\+-*\+$/;
	next if /^-*(\+-*)+$/;
	if (/^\| (.*) \|$/) {
		$status = $1;
	}
	if (/->(secret\/.*):c/) {
		push @{$items{$1}}, $status;
	}
}

title "Testing doomsday dashboard";

test_that "secret/test/expired",   is=>"EXPIRED";
test_that "secret/test/soon",      is=>"WITHIN 3 DAYS";
test_that "secret/test/next",      is=>"WITHIN 3 DAYS";
test_that "secret/test/fortnight", is=>"WITHIN 2 WEEKS";

test_that \%items,                 has_key_count_of=>4, "number of doomed certificates";

summary;
exit $failures > 0 ? 1 : 0;
